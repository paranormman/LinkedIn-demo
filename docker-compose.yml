version: "3.8"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.8
    container_name: kafka
#    ports:
#      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    networks:
      - linkedin-network
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  notification-db:
    image: postgres
    container_name: notification-db
    environment:
      - POSTGRES_DB=notificationDB
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Manoj@123
    networks:
      - linkedin-network
    volumes:
      - notification-db-data:/var/lib/postgresql/data

  discovery-server:
    image: shivmanoj/linkedin-app/discovery-server
    container_name: discovery-server
    networks:
      - linkedin-network
    ports:
      - "8761:8761"

  notification-service:
    image: shivmanoj/linkedin-app/notification-service
    container_name: notification-service
    networks:
      - linkedin-network
    depends_on:
      - notification-db
      - discovery-server
      - kafka

networks:
  linkedin-network:

volumes:
  kafka_data:
  notification-db-data:
